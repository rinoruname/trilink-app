name: Build and Push Trilink API

on:
  push:
    branches: [ "main" ]
    paths:
      - 'trilink-api/**'
      - '.github/workflows/build-trilink-api.yml'
  workflow_dispatch:

env:
  IMAGE_TAG: ${{ github.sha }}

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4

      - name: Build image
        run: |
          docker build . --file Dockerfile \
            --tag rinoruname/trilink-api:${{ env.IMAGE_TAG }} \
            --build-arg POSTGRES_HOST=postgres \
            --build-arg POSTGRES_USER=postgres \
            --build-arg POSTGRES_PASSWORD=password123@123 \
            --build-arg POSTGRES_DB=trilink_db \
            --build-arg POSTGRES_PORT=5432 \
            --build-arg PORT=4000
        working-directory: trilink-api

      - name: Verify image
        run: |
          # Start only postgres first
          docker-compose up -d postgres
          
          # Wait for PostgreSQL to be ready
          echo "Waiting for PostgreSQL..."
          timeout 30s bash -c 'until docker-compose exec -T postgres pg_isready -U postgres; do sleep 2; done' || false
          echo "PostgreSQL is ready!"
          
          # Start API after PostgreSQL is ready
          docker-compose up -d trilink-api
          
          echo "Waiting for API to start..."
          timeout 60s bash -c 'while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' localhost:4000/blogs)" != "200" ]]; do sleep 5; done' || false
          echo "API is up and running!"
          curl -f http://localhost:4000/blogs

      - name: Docker login
        if: success()  # Only login and push if verification passed
        run: docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} --password ${{ secrets.DOCKER_HUB_PAT }}
#comment
      - name: Publish image
        if: success()  # Only push if everything passed
        run: |
          docker tag rinoruname/trilink-api:${{ env.IMAGE_TAG }} rinoruname/trilink-api:latest
          docker push rinoruname/trilink-api:${{ env.IMAGE_TAG }}
          docker push rinoruname/trilink-api:latest 